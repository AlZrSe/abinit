- !variable
    anavarname: alphon
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics:  ALign PHONon mode eigendisplacements
    requires: null
    text: |-
         <p>In case <b>alphon</b> is set to 1, ANADDB will compute linear combinations of
         the eigendisplacements of modes that are degenerate (twice or three times),
         in order to align the mode effective charges along the cartesian axes.
         This option is useful in the mode-by-mode decomposition of the electrooptic tensor, and to compute
         the Raman susceptibilities of individual phonon modes.
         In case of uniaxial crystals, the z-axis should be chosen along the optical axis.
    topics: 
    varset: varanaddb
    vartype: integer
- !variable
    anavarname: asr
    characteristics:null
    commentdefault: was 0 before v5.3
    commentdims: null
    defaultval: 1
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Acoustic Sum Rule<
    requires: null
    text: |-
         <p>Govern the imposition of the Acoustic Sum Rule (ASR).
         <ul>
         <li>  0 => no ASR for interatomic force constants is imposed.</li>
         <li>  1 or 2 => the ASR for interatomic force constants
         is imposed by modifying the on-site interatomic force constants,
         in a symmetric way (asr=2), or in the more general case, unconstrained way (asr=1).</li>
         </ul>
         <p>
         
         More detailed explanations: the total energy should be
         invariant under translation of the crystal as a whole. This
         would guarantee that the three lowest phonon modes at Gamma
         have zero frequency (Acoustic Sum Rule - ASR).
         Unfortunately, the way the DDB is
         generated (presence of a discrete grid of points for the
         evaluation of the exchange-correlation potential and energy)
         slightly breaks the translational invariance.
         Well, in some pathological cases, the breaking can be rather important.
         
         <p>Two quantities are affected: the interatomic forces
         (or dynamical matrices), and the effective charges.
         The ASR for the effective charges is called the charge
         neutrality sum rule, and will be dealt with by the variable
         [[anaddb:chneut]].
         The ASR for the interatomic forces can be restored,
         by modifying the interatomic force of the atom on itself,
         (called self-IFC), as soon as the dynamical matrix at Gamma is known. 
         This quantity should be equal to minus the sum of all interatomic
         forces generated by all others atoms (action-reaction law!),
         which is determined by the dynamical matrix at Gamma.
         <p>
         So, if <b>asr</b> is non-zero, the correction to the self-force
         will be determined, and the self-force will be imposed to be consistent with the ASR.
         This correction will work if IFCs are computed
         ([[anaddb:ifcflag]]/=0),
         as well as if the IFCs are not computed
         ([[anaddb:ifcflag]]==0).
         In both cases, the phonon frequencies will not be the same
         as the ones determined by the output of abinit, RF case.
         If you want to check that the DDB is correct, by comparing
         phonon frequencies from abinit and anaddb, you should turn off both <b>asr</b> and
         [[anaddb:chneut]].
         
         <p>Until now, we have not explained the difference between
         <b>asr</b>=1 and <b>asr</b>=2. 
         This is rather subtle.
         In some local low-symmetry cases (basically the effective charges should be anisotropic),
         when the dipole-dipole contribution is evaluated and subtracted,
         the ASR cannot be imposed without breaking the
         symmetry of the on-site interatomic forces. That explains why two
         options are given: the second case (<b>asr</b>=2, sym) does not
         entirely impose the ASR, but simply the part that keeps the on-site
         interatomic forces symmetric (which means that the acoustic frequencies
         do not go to zero exactly), the first case (<b>asr</b>=1, asym)
         imposes the ASR, but breaks the symmetry.
         <b>asr</b>=2 is to be preferred for the analysis of the interatomic force
         constant in real space, while <b>asr</b>=1 should be used to get the phonon band structure.
         </p>
         <p>(NOTE: in order to confuse even more the situation,
         it seems that the acoustic phonon frequencies generated by the code
         for both the sym and asym options are exactly the same ...
         likely due to an extra symmetrisation in the diagonalisation routine.
         Of course, when the matrix at Gamma has been generated from IFCs coming from dynamical
         matrices none of which are Gamma, the breaking of the ASR is rather severe. 
         In order to clear the situation, one should use a diagonalisation
         routine for non-hermitian matrices. So, at the present status of
         understanding, one should always use the <b>asr</b>=2 option ).
         <br>

    topics: 
    varset: varanaddb
    vartype: integer
- !variable
    anavarname: atftol
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0.05
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: ATomic Temperature Factor TOLerance
    requires: null
    text: |-
         <p>The relative tolerance on the atomic temperature factors.
         This number will determine when the series of channel widths
         with which the DOS is calculated can be stopped, i.e.
         the mean of the relative change going from one grid
         to the next bigger is smaller than <b>wtol2</b>.
  
    topics: 
    varset: varanaddb
    vartype:  real
- !variable
    anavarname: atifc
    characteristics: null 
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: array
    excludes: null
    executables: anaddb
    mnemonics: AToms for IFC analysis
    requires: null
    text: |-
         <p>The actual numbers of the atoms for which the interatomic
         force constant have to be written and eventually analysed.
         <br>
         <p>WARNING: there will be an in-place change of meaning of atifc (this is
         confusing, and should be taken away in one future version - sorry for this).

    topics: 
    varset: varanaddb
    vartype: integer array <b>atifc</b>([[anaddb:natifc]])
 - !variable
    anavarname: a2fsmear
    characteristics:ENERGY
    commentdefault: null
    commentdims: null
    defaultval: 0.00002
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Alpha2F SMEARing factor
    requires: null
    text: |-
       <p>Smearing width for the Eliashberg alpha^2F function
       (similar to a phonon DOS), which is sampled on a finite q and k grid. The Dirac delta
       functions in energy are replaced by Gaussians of width a2fsmear
       (by default in Hartree).
    topics: 
    varset: varanaddb
    vartype:  real
- !variable
    anavarname: band_gap
    characteristics: ENERGY
    commentdefault: null
    commentdims: null
    defaultval: 999.0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: BAND GAP
    requires: null
    text: |-
        <p>Allow setting the target band gap, in eV.
  	([[anaddb:elphflag]]=1).
    topics: 
    varset: varanaddb
    vartype: real 
- !variable
    anavarname: brav
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 1
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: BRAVais
    requires: null
    text: |-
       <p>Allows to specify the Bravais lattice of the crystal,
       in order to help to generate a grid of special q points.
       <p></p>
       <ul>
       <li> 1 =&gt; all the lattices (including FCC, BCC
       and hexagonal) </li>
       <li> 2 =&gt; specific for Face Centered lattices </li>
       <li> 3 =&gt; specific for Body Centered lattices </li>
       <li> 4 =&gt; specific for the Hexagonal lattice </li>
       </ul>
       <p>
       Note that in the latter case, the rprim of
       the unit cell have to be 1.0 0.0 0.0 -.5 sqrt(3)/2 0.0 0.0 0.0 1.0
       in order for the code to work properly.
       <p> Warning: the generation of q-points in anaddb is rather
       old-fashioned, and should be replaced by routines used by the main abinit code.
    topics: 
    varset: varanaddb
    vartype:  integer
- !variable
    anavarname: chneut
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Integer for CHarge NEUTrality treatment
    requires: null
    text: |-
         <p>Set the treatment of the Charge Neutrality requirement for
         the effective charges.
         <p>
         <ul>
         <li> chneut=0 => no ASR for effective charges is imposed</li>
         <li> chneut=1 => the ASR for effective charges is imposed
                by giving to each atom an equal portion
                of the missing charge. See Eq.(48) in Phys. Rev. B55, 10355 (1997).</li>
         <li> chneut=2 => the ASR for effective charges is imposed
                by giving to each atom a portion of the
                missing charge proportional to the screening charge
                already present. See Eq.(49) in Phys. Rev. B55, 10355 (1997).</li>
         </ul>
         <p>
         More detailed explanation: the sum of the effective charges
         in the unit cell should be equal to zero. It is not the case
         in the DDB, and this sum rule is sometimes strongly violated.
         In particular, this will make the lowest frequencies at Gamma
         non-zero. There is no "best" way of imposing the ASR on effective charges. 
    topics: 
    varset: varanaddb
    vartype:  integer parameter
- !variable
    anavarname: dieflag
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: DIElectric FLAG
    requires: null
    text: |-
       <p>Integer. Frequency-dependent dielectric tensor flag.
       <br>
       <ul>
        <li> 0 => No dielectric tensor is calculated.</li>
        <li> 1 => The frequency-dependent dielectric tensor is calculated.
             Requirements for preceding response-function DDB generation
             run:  electric-field and full atomic-displacement responses.
             Set [[rfstrs]] = 1, 2, or 3 (preferably 3).
             Set [[rfatpol]] and
             [[rfdir]] to do a full calculation of
               phonons at Q=0.
         The frequencies are defined by the
       [[anaddb:nfreq]],[[anaddb:frmin]],[[anaddb:frmax]]
        variables. Also, the generalized Lyddane-Sachs-Teller
       relation will be used as an independent check of the
       dielectric tensor at zero frequency (this for the
       directions defined in the phonon list 2.
       See [[anaddb:nph2l]].</li>
       <li> 2 => Only the electronic dielectric tensor is calculated.
        It corresponds to a zero-frequency homogeneous field,
       with quenched atomic positions. For large band gap materials,
       this quantity is measurable because the highest phonon
       frequency is on the order of a few tenths of eV, and the
       band gap is larger than 5eV. Requirements for preceding response-function
       DDB generation: electric-field response.
       Set [[rfelfd]] = 1 or 3 (preferably 3).
       Note that the same information on the electronic dielectric tensor will be printed in the
       .out file of the [[rfelfd]] run.
       </li>
       <li> 3 => Compute and print the relaxed-ion dielectric tensor.
             Requirements for preceding response-function DDB generation
             run:  electric-field and full atomic-displacement responses.
             Set [[rfstrs]] = 1, 2, or 3 (preferably 3).
             Set [[rfatpol]] and
             [[rfdir]] to do a full calculation of
               phonons at Q=0 (needed because the inverse of
               force-constant tensor is required). Furthermore, in the anaddb input file the variable
               [[anaddb:nph2l]] must be nonzero in order to initiate
               computation of atomic displacements. If only the dielectric response is needed it
               is sufficient to set [[anaddb:nph2l]] to 1 and leave 
               [[anaddb:qph2l]] at its default value (the Gamma point).
          Note that the relaxed-ion dielectric tensor computed here can
          also be obtained as the zero-frequency limit of the
          frequency-dependent dielectric tensor using input variables
          dieflag=1 and frmin=0.0.  (The results obtained using these two
          approaches should agree to good numerical precision.)  The ability
          to compute and print the static dielectric tensor here is provided
          for completeness and consistency with the other tensor
          quantities that are computed in this section of the code.
        </li>
        <li> 4 => Calculate dielectric tensor of both relaxed ion and
                      free stress.
          We need information of internal strain and elastic tensor (relaxed ion)
          in this computation. So please set:
          [[anaddb:elaflag]]=2,3,4 or 5  and
          [[anaddb:instrflag]]=1
        </ul>
    topics: 
    varset: varanaddb
    vartype:  integer
- !variable
    anavarname: dipdip
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 1
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: DIPole-DIPole interaction
    requires: null
    text: |-
         <ul>
         <li>
          0 => the dipole-dipole interaction is not handled separately
          in the treatment of the interatomic forces.
          This option is available for testing purposes or if effective charge
          and/or dielectric tensor is not available in the derivative database.
          It gives results much less accurate than <b>dipdip</b>=1.</li>
         <li>
         1 => the dipole-dipole interaction is subtracted from the dynamical
          matrices before Fourier transform, so that only the short-range
          part is handled in real space. Of course, it is reintroduced
          analytically when the phonon spectrum is interpolated, or if
          the interatomic force constants have to be analysed in real space.</li>
          </ul>
    topics: 
    varset: varanaddb
    vartype:  integer
- !variable
    anavarname: dosdeltae
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 4.5E-06 Hartree = 1 cm<sup>-1</sup>
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: DOS DELTA in Energy
    requires: null
    text: |-
         <p>The input variable <b>dosdeltae</b> is used to define the step of the frequency grid used to
         calculate the phonon density of states when [[anaddb:prtdos]]=1.
    topics: 
    varset: varanaddb
    vartype: real
- !variable
    anavarname: dossmear
    characteristics: Energy
    commentdefault: null
    commentdims: null
    defaultval: 4.5E-05 Hartree = 10 cm<sup>-1</sup>
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: DOS SMEARing value
    requires: null
    text: |-
         <p><b>dossmear</b> defines the gaussian broadening used to calculate the phonon density
         of states when [[anaddb:prtdos]]=1.
    topics: 
    varset: varanaddb
    vartype:  real
- !variable
    anavarname: dostol
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0.25
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: DOS TOLerance
    requires: null
    text: |-
         <p>The relative tolerance on the phonon density of state.
         This number will determine when the series of grids
         with which the DOS is calculated can be stopped, i.e.
         the mean of the relative change going from one grid
         to the next bigger is smaller than <b>dostol</b>.
    topics: 
    varset: varanaddb
    vartype: real 

- !variable
    anavarname: dossum
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: DOS SUM
    requires: null
    text: |-
         <p>Set the flag to calculate the two phonon dos density of states. Sum and Difference for
         the Gamma point. The DOS is converged and based on that, the sum and different is
         reported in the output file <b>dossum</b>.

    topics: 
    varset: varanaddb
    vartype:  integer
- !variable
    anavarname: eivec
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: EIgenVECtors
    requires: null
    text: |-
         <ul>
         <li> 0 => do not write the phonon eigenvectors;</li>
         <li> 1 or 2 => write the phonon eigenvectors;</li>
         <li> 4 => generate output files for band2eps (drawing tool for the phonon band structure);</li>
         </ul>
    topics: 
    varset: varanaddb
    vartype:  integer
- !variable
    anavarname: elaflag
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: ELAstic tensor FLAG
    requires: null
    text: |-
         <p>Flag for calculation of elastic and compliance tensors
         <ul>
         <li>0 => No elastic or compliance tensor will be calculated.</li>
         <li>1 => Only clamped-ion elastic and compliance tensors will be
             calculated.
             Requirements for preceding response-function DDB generation
             run:  Strain perturbation.
             Set [[rfstrs]] to 1, 2, or 3.
             Note that [[rfstrs]]=3 is recommended so that responses to
             both uniaxial and shear strains will be computed.
         </li>
         <li>2 => Both relaxed- and clamped-ion elastic and compliance tensor
             will be calculated, but only the relaxed-ion quantities
             will be printed.
            The input variable [[anaddb:instrflag]]
             should also be set to 1, because
             the internal-strain tensor is needed to compute the relaxed-ion
             corrections.  Requirements for preceding response-function DDB
             generation run:  Strain and atomic-displacement responses at Q=0.
             Set [[rfstrs]] = 1, 2, or 3 (preferably 3).
             Set [[rfatpol]] and
             [[rfdir]] to do a full calculation of
               phonons at Q=0 (needed because the inverse of
               force-constant tensor is required).
         </li>
         <li>3 =>  Both relaxed and clamped-ion elastic and compliance tensors
             will be printed out.
             The input variable [[anaddb:instrflag]]
              should also be set to 1.
             Requirements for preceding response-function DDB generation
             run:  Same as for <b>elaflag</b>=2.
         </li>
         <li>4 => Calculate the elastic and compliance tensors (relaxed ion)
           at fixed displacement field, the relaxed-ion tensors at fixed
           electric field will be printed out too, for comparison.
           When <b>elaflag</b>=4, we need the information of internal strain and
          relaxed-ion dielectric tensor to build the whole tensor, so
          we need set [[anaddb:instrflag]]=1 and
          [[anaddb:dieflag]]=3 or 4 .
         </li>
         <li>5 => Calculate the relaxed ion elastic and compliance tensors, considering
          the stress left inside cell. At the same time, bare relaxed ion tensors
          will still be printed out for comparison.
          In this calculation, stress tensor is needed to compute the correction
          term, so one supposed to merge the first order derivative data base (DDB file)
          with the second order derivative data base (DDB file) into a new DDB file, which
          can contain both information. And the program will also check for the users.
         </li>
         </ul>
    topics: 
    varset: varanaddb
    vartype:  integer
- !variable
    anavarname: elphflag
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: ELectron-PHonon FLAG
    requires: null
    text: |-
         <p>If <b>elphflag</b> is 1, anaddb performs an analysis of the electron-phonon coupling.
    topics: 
    varset: varanaddb
    vartype: integer
- !variable
    anavarname: elphsmear
    characteristics: ENERGY
    commentdefault: null
    commentdims: null
    defaultval: 0.01 Hartree
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: ELectron-PHonon SMEARing factor
    requires: null
    text: |-
       <p>Smearing width for the Fermi surface integration (in Hartree by default).
    topics: 
    varset: varanaddb
    vartype:  real
- !variable
    anavarname: elph_fermie
    characteristics: ENERGY
    commentdefault: null
    commentdims: null
    defaultval: 0.0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: ELectron-PHonon FERMI Energy
    requires: null
    text: |-
         <p>If non-zero, will fix artificially the value of the Fermi energy
         (e.g. for semiconductors), in the electron-phonon case. Note that elph_fermie and [[anaddb:ep_extrael]] 
         should not be used at the same time. ([[anaddb:elphflag]]=1).
    topics: 
    varset: varanaddb
    vartype:  real
- !variable
    anavarname: enunit
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: ENergy UNITs
    requires: null
    text: |-
         <p>Give the energy for the phonon frequency output
         (in the output file, not in the console log file, for
          which Hartree units are used).
         <br>
         <ul>
          <li> 0 => Hartree and cm-1;</li>
          <li> 1 => meV and Thz;</li>
          <li> 2 => Hartree, cm-1, meV, Thz, and Kelvin.</li>
         </ul>
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: ep_b_max
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Electron Phonon integration Band MAXimum
    requires: null
    text: |-
        <p>When set, and [[anaddb:telphint]] is equal to 2, this variable determines the k-point integration weights which are used in the electron-phonon part of the code. Instead of weighting according to a distance from the Fermi surface, an equal weight is given to all k-points, for all bands between [[ep_b_min]] and <b>ep_b_max</b>.
 
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: ep_b_min
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Electron Phonon integration Band MINimum
    requires: null
    text: |-
         <p>As for [[anaddb:ep_b_max]], but <b>ep_b_min</b> is the lower bound on the band integration, instead of the upper bound. See also [[anaddb:telphint]].

    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: ep_extrael
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0.0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Electron-Phonon EXTRA ELectrons
    requires: null
    text: |-
         <p>If non-zero, will fix artificially the number of extra electrons per unit cell (positive for electron doping), according to a doped case.
  	(e.g. for semiconductors), in the electron-phonon case. This field can also be filled with doping concentration, in the units of cm-3 (negative for electron doping). Note that <b>ep_extrael</b> and [[anaddb:elph_fermie]] should not be used at the same time.
  	([[anaddb:elphflag]]=1).

    topics: 
    varset: varanaddb
    vartype: real 
- !variable
    anavarname: ep_int_gkk
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Electron-Phonon INTerpolation of GKK
    requires: null
    text: |-
         <p>This flag determines whether the interpolation of the electron-phonon matrix
         elements over the coarse k-grid is done (<b>ep_int_gkk</b> 1) before summing 
         with appropriate Fermi Surface weights. In this way, the two integration weights 
         are treated symmetrically.
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: ep_keepbands
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Electron-Phonon KEEP dependence on electron BANDS
    requires: null
    text: |-
       <p>This flag determines whether the dependency of the electron-phonon matrix
       elements on the electron band index is kept (<b>ep_keepbands</b> 1), or whether
       it is summed over immediately with appropriate Fermi Surface weights. For
       transport calculations <b>ep_keepbands</b> must be set to 1.
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: ep_nqpt
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Electron Phonon Number of Q PoinTs
    requires: null
    text: |-
         <p>In case a non-uniform grid of q-points is being used, for direct calculation
         of the electron-phonon quantities without interpolation, this specifies the
         number of q-points to be found in the GKK file, independently of the normal
         anaddb input (ngqpt)
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: ep_nspline
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 20
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Electron Phonon Number for SPLINE interpolation
    requires: null
    text: |-
         <p>The scale factor for cubic spline interpolation, only used in the relaxation time approximation ([[anaddb:ifltransport]]=3).

    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: ep_prt_yambo
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Electron Phonon PRinTout YAMBO data
    requires: null
    text: |-
       <p>For electron-phonon calculations, print out matrix elements for use by the yambo code.
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: ep_qptlist
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: *0
    dimensions: array
    excludes: null
    executables: anaddb
    mnemonics: Electron Phonon Q PoinT LIST
    requires: null
    text: |-
         <p>In case a non-uniform grid of q-points is being used, for direct calculation
         of the electron-phonon quantities without interpolation, this specifies the
         q-points to be found in the GKK file, independently of the normal
         anaddb input (ngqpt), in reduced coordinates of the reciprocal space lattice.
    topics: 
    varset: varanaddb
    vartype: real array of 3*ep_nqpt elements 
- !variable
    anavarname: ep_scalprod
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: DO SCALar PRODuct for gkk matrix elements
    requires: null
    text: |-
       
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: 
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: 
    requires: null
    text: |-
         <p>The input variable <b>ep_scalprod</b> is a flag determining whether the scalar
         product of the electron-phonon matrix elements (gkk) with the phonon
         displacement vectors is done before or after interpolation. Doing so before
         (<b>ep_scalprod</b> 1) makes phonon linewidths smoother but introduces an error,
         as the interpolated phonons and gkk are not diagonalized in the same basis.
         Doing so afterwards (<b>ep_scalprod</b> 0) eliminates the diagonalization error,
         but sometimes gives small spikes in the phonon linewidths near band crossings
         or high symmetry points. I do not know why...
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: freeze_displ
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0.0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: FREEZE DISPLacement of phonons into supercells
    requires: null
    text: |-
         <p>If different from zero, <b>freeze_displ</b> will be used as the amplitude of a phonon displacement.
         For each q-point and mode in the [[anaddb:qph1l]] list,
         a file will be created containing a supercell
         of atoms with the corresponding phonon displacements frozen in.
         This is typically useful to freeze a soft phonon mode, then let it relax in abinit
         afterwards.
         <br>
         <b>freeze_displ</b> is unitless, but has a physical meaning: it is related to the Bose
         distribution n_B and the frequency w_qs of the phonon mode. At a given temperature T,
         <b>freeze_displ</b> will give the mean square displacement of atoms (along with the displacement
         vectors, which are in Bohr). In atomic units <b>freeze_displ</b> = sqrt((0.5 + n_B(w_qs/kT) / w_qs)
         Typical values are 50-200 for a frequency of a few hundred cm-1 and room temperature. If all you want
         is to break the symmetry in the right direction, any reasonable value (10-50) should be ok.
         <br>
         <b>WARNING</b>: this will create a <i>lot</i> of files (3*natom*nph1l), so it should be used with a small number
         [[anaddb:nph1l]] of q-points for interpolation.
    topics: 
    varset: varanaddb
    vartype: real number 
- !variable
    anavarname: frmax
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 10.0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: FRequency MAXimum
    requires: null
    text: |-
        <p>Value of the largest frequency for the frequency-dependent dielectric tensor, in Hartree.
    topics: 
    varset: varanaddb
    vartype: real number 
- !variable
    anavarname: frmin
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0.0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: FRequency MINimum
    requires: null
    text: |-
       <p>Value of the lowest frequency for the frequency-dependent dielectric tensor, in Hartree.
    topics: 
    varset: varanaddb
    vartype: real number 
- !variable
    anavarname: gkqwrite
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: GKk for input Q grid to be WRITtEn to disk
    requires: null
    text: |-
       <p>Flag to write out the reciprocal space matrix elements to a disk file named
       gkqfile. This reduces strongly the memory needed for an electron-phonon run.
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: gruns_ddbs
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: Empty
    dimensions: array
    excludes: null
    executables: anaddb
    mnemonics: GRUNeiSen DDBS
    requires: null
    text: |-
        <p>List of strings with the paths of the DDB files used for the calculation of the Gruneisen parameters.
        Each string must be enclosed by quotation marks. The number of DDB files is defined by
        [[anaddb:gruns_nddbs]] (possible values are: 3,5,7,9)
        The DDB files correspond to phonon calculations performed at different volumes (usually &plusmn; 1% 
        of the equilibrium volume). The DDB files must be ordered according to the volume of the unit cell 
        (the DDB with smallest volume comes first) and the volume increment must be constant.
        The code computes the derivative of the dynamical matrix wrt the volume using central finite difference.
    topics: 
    varset: varanaddb
    vartype: list of strings 
- !variable
    anavarname: gruns_nddbs
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: GRUNeiSen Number of DDB files
    requires: null
    text: |-
       <p>This variable defines the number of DDB files (read from [[anaddb:gruns_ddbs]])
       used for the calculation of the Gruneisen parameters.
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: iatfix
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: *0
    dimensions: array
    excludes: null
    executables: anaddb
    mnemonics: Indices of the AToms that are FIXed
    requires: null
    text: |-
       <p>Indices of the atoms that are fixed during a structural relaxation at constrained polarization.
       See [[anaddb:polflag]].
    topics: 
    varset: varanaddb
    vartype: integer array (1:[[anaddb:natfix]])
- !variable
    anavarname: iatprj_bs
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Indices of the AToms for the PRoJection of the phonon Band Structure
    requires: null
    text: |-
       <p>Indices of the atoms that are chosen for projection of the phonon eigenvectors, giving a weighted phonon band structure file.
    topics: 
    varset: varanaddb
    vartype: integer array (1:[[anaddb:natprj_bs]]) 
- !variable
    anavarname: ifcana
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: IFC ANAlysis
    requires: null
    text: |-
         <ul>
         <li> 0 => no analysis of interatomic force constants; </li>
         <li> 1 => analysis of interatomic force constants.
         </ul>
  
         <p> If the analysis is activated, one get the
         trace of the matrices between pairs of atoms,
         if [[anaddb:dipdip]] is 1,
         get also the trace of the short-range
         and electrostatic part, and
         calculate the ratio with the full matrix;
         then define a local coordinate reference (using
         the next-neighbour coordinates), and express
         the interatomic force constant matrix between
         pairs of atoms in that local coordinate reference
         (the first vector is along the bond; the second
         vector is along the perpendicular force exerted
         on the generic atom by a longitudinal displacement
         of the neighbouring atom - in case it does not vanish;
         the third vector is perpendicular to the two other)
         also calculate ratios with respect to the
         longitudinal force constant ( the (1,1) element of
         the matrix in local coordinates).
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: ifcflag
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Interatomic Force Constants FLAG
    requires: null
    text: |-
         <ul>
         <li> 0 => do all calculations directly from the DDB, without the
                    use of the interatomic force constant.</li>
         <li> 1 => calculate and use the interatomic force constants
                 for interpolating the phonon spectrum and dynamical
                 matrices at every q wavevector, and eventually analyse
                 the interatomic force constants, according to the
                 informations given by
         [[anaddb:atifc]],[[anaddb:dipdip]],[[anaddb:ifcana]],[[anaddb:ifcout]],[[anaddb:natifc]],[[anaddb:nsphere]],[[anaddb:rifcsph]]</li>
         </ul>
            More detailed explanations: if the dynamical matrices
            are known on a regular set of wavevectors, they
            can be used to get the interatomic forces, which are simply
            their Fourier transform. When non-analyticities
            can been removed by the use of effective charge at Gamma
            (option offered by putting
            [[anaddb:dipdip]] to 1),
            the interatomic forces are known to decay rather fast (in real space).
            The interatomic forces generated from a small set of
            dynamical matrices
            could be of sufficient range to allow
            the remaining interatomic forces to be neglected.
            This gives a practical way to interpolate the content
            of a small set of dynamical matrices, because dynamical
            matrices can everywhere be generated starting from this
            set of interatomic force constants. It is suggested to
            always use <b>ifcflag</b>=1. The <b>ifcflag</b>=0 option
            is available for checking purpose, and if there is not enough information in the DDB.

    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: ifcout
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: IFC OUTput
    requires: null
    text: |-
         <p>For each atom in the list [[anaddb:atifc]] (generic atoms),
         <b>ifcout</b> give the number
         of neighbouring atoms for which the ifc's will be
         output (written) and eventually analysed. The
         neighbouring atoms are selected by decreasing distance with respect to
         the generic atom.
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: ifltransport
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: IFLag for TRANSPORT
    requires: null
    text: |-
       <p>if ifltransport=1 (LOVA) or ifltransport=2 (non-LOVA), anaddb calculates the transport
       properties: electrical and thermal resistivities from electron-phonon
       interactions in the variational approach. If ifltransport=3, anaddb calculates the 
       k-dependent relaxation time. (needs[[anaddb:elphflag]] = 1)
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: instrflag
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: INternal STRain FLAG
    requires: null
    text: |-
         <p>Internal strain tensor flag.
         <br>
         <ul>
         <li> 0 => No internal-strain calculation.</li>
          <li> 1 => Print out both force-response and displacement-response
             internal-strain tensor.
             Requirements for preceding response-function DDB generation
             run:  Strain and full atomic-displacement responses.
             Set [[rfstrs]] = 1, 2, or 3 (preferably 3).
             Set [[rfatpol]] and
             [[rfdir]] to do a full calculation of
               phonons at Q=0.
           </li>
         </ul>
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: istrfix
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Index of STRain FIXed
    requires: null
    text: |-
        <p>Indices of the elements of the strain tensor that are fixed during a structural relaxation at constrained polarisation:
  
        <ul>
        <li>0 =&gt; No elastic or compliance tensor will be calculated.</li>
        <li>1 =&gt; Only clamped-ion elastic and compliance tensors will be
        calculated. Requirements for preceding response-function DDB generation
        run: Strain perturbation. Set [[rfstrs]] to 1, 2, or 3.
        Note that [[rfstrs]]>=3
        is recommended so that responses to both uniaxial and shear strains
        will be computed. </li>
          <li>2 =&gt; Both relaxed- and clamped-ion elastic and compliance
        tensor will be calculated, but only the relaxed-ion quantities will be
        printed. The input variable [[anaddb:instrflag]]
        should also be set to 1, because the internal-strain tensor is needed
        to compute the relaxed-ion corrections. Requirements for preceding
        response-function DDB generation run: Strain and atomic-displacement
        responses at Q=0. Set [[rfstrs]] = 1, 2, or 3 (preferably 3). Set 
         [[rfatpol]] and [[rfdir]] to do a full
        calculation of phonons at Q=0 (needed because the inverse of
        force-constant tensor is required). </li>
          <li>3 =&gt; Both relaxed and clamped-ion elastic and compliance
        tensors will be printed out. The input variable [[anaddb:instrflag]] should also be set to
        1. Requirements for preceding response-function DDB generation run:
        Same as for [[anaddb:elaflag]]=2'. </li>
          <li>4 =&gt; Calculate the elastic and compliance tensors (relaxed
        ion) at fixed displacement field, the relaxed-ion tensors at fixed
        electric field will be printed out too, for comparison. When [[anaddb:elaflag]]=4,
        we need the information of internal strain and relaxed-ion dielectric
        tensor to build the whole tensor, so we need set [[anaddb:instrflag]]=1 and [[anaddb:dieflag]]=3 or 4 . </li>
          <li>5 =&gt; Calculate the relaxed ion elastic and compliance tensors,
        considering the stress left inside cell. At the same time, bare relaxed
        ion tensors will still be printed out for comparison. In this
        calculation, stress tensor is needed to compute the correction term, so
        one supposed to merge the first order derivative data base (DDB file)
        with the second order derivative data base (DDB file) into a new DDB
        file, which can contain both information. And the program will also
        check for the users. </li>
        </ul>
        See [[anaddb:polflag]].
    topics: 
    varset: varanaddb
    vartype: integer array istrfix(1:[[anaddb:nstrfix]]) 
- !variable
    anavarname: kptrlatt
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 9*0
    dimensions: array
    excludes: null
    executables: anaddb
    mnemonics: K PoinT Reciprocal LATTice
    requires: null
    text: |-
       <p>Unnormalized lattice vectors for the k-point grid in reciprocal space
       (see [[kptrlatt]] abinit variable definitionas well).
       Input needed in electron-phonon calculations
       using nesting functions or tetrahedron integration. 
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: kptrlatt_fine
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 9*0
    dimensions: array
    excludes: null
    executables: anaddb
    mnemonics: K PoinT Reciprocal LATTice for FINE grid
    requires: null
    text: |-
       <p>As kptrlatt above, but for a finer grid of k-points. Under development. Does not work yet, as of June 2010.
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: mustar
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0.1
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: MU STAR
    requires: null
    text: |-
       <p>Average electron-electron interaction strength, for the computation of the superconducting Tc using Mc-Millan's formula.
    topics: 
    varset: varanaddb
    vartype: real 
- !variable
    anavarname: natfix
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Number of AToms FIXed
    requires: null
    text: |-
         <p>Number of atoms that are fixed during a structural optimisation at constrained polarization.
         See [[anaddb:polflag]].
    topics: 
    varset: varanaddb
    vartype: integer 

- !variable
    anavarname: natifc
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Number of AToms for IFC analysis
    requires: null
    text: |-
        <p> Give the number of atoms for which IFCs are written and eventually analysed. The list of these atoms is provided
        by [[anaddb:atifc]].
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: natprj_bs
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Number of AToms for PRoJection of the Band Structure
    requires: null
    text: |-
         <p>Give the number of atoms for which atomic-projected phonon
         band structures will be output. The list of these atoms is provided
         by [[anaddb:iatprj_bs]].
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: nchan
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 800
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Number of CHANnels
    requires: null
    text: |-
         <p>The number of channels of width 1 cm-1 used in calculating the phonon density of states through the histogram method,
         or, equivalently, the largest frequency sampled. The first channel begins at 0.
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: ndivsm
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 20
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Number of DIVisions for the SMallest segment
    requires: null
    text: |-
         <p>This variable defines the number of divisions used to sample the smallest segment of the q-path used 
         for the phonon band structure. If ndivsm is specified in the input file, the code will automatically generate the points along the path using the coordinates given in the array [[anaddb:qpath]].
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: nfreq
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 1
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Number of FREQuencies
    requires: null
    text: |-
         <p>Number of frequencies wanted for the frequency-dependent dielectric tensor. Should be positive.
         See [[abaddb:dieflag]].
  
         The code will take <b>nfreq</b> equidistant values from [[anaddb:frmin]] to [[anaddb:frmax]].
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: ngqpt
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 3*0 (will not work)
    dimensions: array
    excludes: null
    executables: anaddb
    mnemonics: Number of Grids points for Q PoinTs
    requires: null
    text: |-
         <p>The Monkhorst-Pack grid linear dimensions, for the DDB (coarse grid).
    topics: 
    varset: varanaddb
    vartype: integer array <b>ngqpt</b>(3)
- !variable
    anavarname: ng2qpt
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 3*0 (will not work)
    dimensions: array
    excludes: null
    executables: anaddb
    mnemonics: Number of Grids points for Q PoinTs (grid 2)
    requires: null
    text: |-
         <p>The Monkhorst-Pack grid linear dimensions, for the finer of the
         series of fine grids. Used for the integration
         of thermodynamical functions (Bose-Einstein distribution)
         or for the DOS.
    topics: 
    varset: varanaddb
    vartype: integer array <b>ng2qpt</b>(3)
- !variable
    anavarname: ngrids
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 4
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Number of GRIDS
    requires: null
    text: |-
         <p>This number define the series of grids that will be used
         for the estimation of the phonon DOS. The coarsest will be
         tried first, then the next, ... then the one described by
         [[anaddb:ng2qpt]].
         The intermediate grids are defined
         for igrid=1... <b>ngrids</b>,
         by the numbers ngqpt_igrid(ii)=(ng2qpt(ii)*igrid)/<b>ngrids</b>
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: nlflag
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Non-Linear FLAG
    requires: null
    text: |-
         <p>Non-linear properties flag.
         <ul>
           <li>0 => do not compute non-linear properties ;</li>
           <li>1 => the electrooptic tensor, Raman susceptibilities and non-linear optical
             susceptibilities are calculated;</li>
           <li>2 => only the non-linear optical susceptibilities and first-order
             changes of the dielectric tensor induced by an atomic displacement are calculated;</li>
           <li>3 => only the non-linear optical susceptibility is calculated.</li>
         </ul>
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: nph1l
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Number of PHonons in List 1
    requires: null
    text: |-
         <p>The number of wavevectors in phonon list 1, used for interpolation of the phonon frequencies. The 
         values of these wavevectors will be specified by [[anaddb:qph1l]].
         The dynamical matrix for these wavevectors, obtained
         either directly from the DDB - if
         [[anaddb:ifcflag]]=0 - or through
         the interatomic forces interpolation - if
         [[anaddb:ifcflag]]=1 -),
         will be diagonalized, and the corresponding eigenfrequencies
         will be printed.
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: nph2l
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Number of PHonons in List 2
    requires: null
    text: |-
         <p>The number of wavevectors in phonon list 2, defining the directions
         along which the non-analytical splitting of phonon frequencies
         at Gamma will be calculated. The actual
         values of the wavevector directions will be specified
         by [[anaddb:qph2l].
         These are actually all wavectors at Gamma, but obtained
         by a limit along a different direction in the Brillouin-zone.
         It is important to note that non-analyticities in the
         dynamical matrices are present at Gamma, due to the
         long-range Coulomb forces. So, going to Gamma along different
         directions can give different results.
         <p>
         The wavevectors in list 2 will be used to:
         <br>
  
         - generate and diagonalize a dynamical matrix, and print the
              corresponding eigenvalues.
  
         <br>
  
         - calculate the generalized Lyddane-Sachs-Teller relation.
            Note that if the three first numbers are zero, then
            the code will do a calculation at Gamma without
            non-analyticities.
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: nqpath
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Number of Q wavevectors defining a PATH
    requires: null
    text: |-
         <p>Number of q-points in the array [[anaddb:qpath]]
         defining the path along which the phonon band structure and phonon linewidths
         are interpolated.
    topics: 
    varset: varanaddb
    vartype: integer 
 - !variable
    anavarname: nqshft
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 1
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Number of Q SHiFTs
    requires: null
    text: |-
         <p>The number of vector shifts of the simple Monkhorst and
         Pack grid, needed to generate the coarse grid of q points
         (for the series of fine grids, the number of shifts it is always taken to be 1).
         Usually, put it to 1.
         Use 2 if BCC sampling (Warning: not BCC lattice, BCC *sampling*),
         and 4 for FCC sampling (Warning: not FCC lattice, FCC *sampling*).
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: 
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: 
    requires: null
    text: |-
       
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: nsphere
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Number of atoms in SPHERe
    requires: null
    text: |-
         <p>Number of atoms included in the cut-off sphere for
         interatomic force constant, see also the alternative [[anaddb:rifcsph]].
         If <b>nsphere</b>= 0: maximum extent allowed by the grid.
         If <b>nsphere</b>= -1: the code analyzes different values of nsphere and
         find the value that does not lead to unstable frequencies in a small sphere around Gamma.
         The truncated IFCs are then used for further post-processing.  
         The results of the test are reported in the main output file.
         This option is useful to obtain a initial guess of nsphere: the value that
         leads to stable frequencies and gives linear dispersion for the acoustic modes around Gamma 
         is usually smaller that the one reported by nsphere -1.
  
         <p>This number defines the atoms for which the
         short range part of the interatomic force constants, after
         imposition of the acoustic sum rule, will not be put to zero.
         This option is available for testing purposes
         (evaluate the range of the interatomic force constants), because
         the acoustic sum rule will be violated if some atoms are no more
         included in the inverse Fourier Transform.
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: nstrfix
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Number of STRain components FIXed
    requires: null
    text: |-
        <p> Number of strain component that are fixed during a
        structural optimisation at constrained polarization.
        See [[anaddb:polflag]].
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: ntemper
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 10
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Number of TEMPERatures
    requires: null
    text: |-
         <p>Number of temperatures at which the thermodynamical
         quantities have to be evaluated. Now also used for the output of transport
         quantities in electron-phonon calculations. The full grid is specified
         with the [[anaddb:tempermin]] and 
         [[anaddb:temperinc]] variables.
         The default temperature grid goes from 100K to 1000K by step of 100K. For the largest temperatures, for most solids, anharmonic effects not accounted in the harmonic approximation implemented in anaddb will be important. For weakly bounded systems (e.g. Van der Waals solids), such anharmonic effects might be important already at room temperature.
  
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: nwchan
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 10
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Number of Widths of CHANnels
    requires: null
    text: |-
        <p> Integer. The width of the largest channel
        used to sample the frequencies.
        The code will generate different sets of channels,
        with decreasing widths (by step of 1 cm-1), from
        this channel width to 1, eventually. It considers to
        have converged when the convergence criterion based on [[anaddb:dostol]] and [[anaddb:thmtol]] have been fulfilled.
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: outscphon
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: OUTput files for Self Consistent PHONons
    requires: null
    text: |-
         <p>If set to 1, the phonon frequency and eigenvector files needed for a Self Consistent
         phonon run (as in Souvatzis PRL <b>100</b> 095901) will be output to files appended _PHFRQ and _PHVEC.
         The third file needed is appended _PCINFO for Primitive Cell INFOrmation.
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: outboltztrap
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: OUTput files for BOLTZTRAP code
    requires: null
    text: |-
        <p> If set to 1, the phonon frequencies on the ngqpt grid are output in a format legible by the BoltzTrap code,
        which does band interpolation and gets group velocities. The output file will be appended _BTRAP
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: piezoflag
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: PIEZOelectric tensor FLAG
    requires: null
    text: |-
         <p>Flag for calculation of piezoelectric tensors
         <ul>
           <li>0 =&gt; No piezoelectric tensor will be calculated.</li>
           <li>1 =&gt; Only the clamped-ion piezoelectric tensor is computed and
         printed. Requirements for preceding response-function DDB generation
         run: Strain and electric-field responses. For the electric-field part,
         one needs results from a prior 'ddk perturbation' run. Note that even
         if only a limited number of piezoelectric tensor terms are wanted (as
         determined by rfstrs and rfdir in this calculation) it is necessary to
         set rfdir = 1 1 1 in the d/dk calculation for most structures. The only
         obvious exception to this requirement is cases in which the primitive
         lattice vectors are all aligned with the cartesian axes. The code will
         omit terms in the output piezoelectric tensor for which the available
         d/dk set is incomplete. Thus: Set [[rfstrs]] to 1, 2, or 3i
         (preferably 3) </li>
           <li>2 =&gt; Both relaxed- and clamped-ion elastic and compliance
         tensor will be calculated, but only the relaxed-ion quantities will be
         printed. The input variable [[anaddb:instrflag]]
         should also be set to 1, because the internal-strain tensor is needed
         to compute the relaxed-ion corrections. Requirements for preceding
         response-function DDB generation run: Strain, electric-field and full
         atomic-displacement responses at Q=0. Set [[rfstrs]] = 1, 2, or 3
         (preferably 3). Set [[rfelfd]] = 3. Set [[rfatpol]] and <[[rfdir]] to do a
         full calculation of phonons at Q=0 (needed because the inverse of
         force-constant tensor is required). </li>
           <li>3 =&gt; Both relaxed and clamped-ion piezoelectric tensors will
         be printed out. The input variable [[anaddb:instrflag]]
         should also be set to 1. Requirements for preceding response-function
         DDB generation run: Same as for <b>piezoflag</b>=2. </li>
           <li>4 =&gt; Calculate the piezoelectric d tensor (relaxed ion). In
         order to calculate the piezoelectric d tensor, we need information of
         internal strain and elastic tensor (relaxed ion). So we should set [[anaddb:elaflag]]= 2,3,4, or 5 and [[anaddb:instrflag]]=1. The subroutine will
         also do a check for you, and print warning message without stopping
         even if flags were not correctly set. </li>
           <li>5 =&gt; Calculate the piezoelectric g tensor (relaxed ion). In
         this computation, we need information of internal strain, elastic
         tensor (relaxed ion) and dielectric tensor (relaxed ion). So we should
         set: [[anaddb:instrflag]]=1, [[anaddb:elaflag]]=2,3,4 or 5, [[anaddb:dieflag]]=3 or 4. The subroutine
         will also do a check for you, and print warning message without
         stopping even if flags were not correctly set. </li>
           <li>6 =&gt; Calculate the piezoelectric h tensor (relaxed ion). In
         this calculation, we need information of internal strain and dielectric
         tensor (relaxed ion). So we need set: [[anaddb:instrflag]]=1 and [[anaddb:dieflag]]=3 or 4. The subroutine
         will also do a check for you, and print warning message without
         stopping even if flags were not correctly set. </li>
           <li>7 =&gt; calculate all the possible piezoelectric tensors,
         including e (clamped and relaxed ion), d, g and h tensors. The flags
         should be set to satisfy the above rules from 1 to 6.</li>
         </ul>
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: polflag
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: 
    requires: null
    text: |-
         <p>If activated, compute polarization in cartesian coordinates,
         and update lattice constants and atomic positions in order to perform a structural
         optimization at constrained polarization.
         <p>
         More detailed explanation: ANADDB can use the formalism described in
         Na Sai et al, PRB 66, 104108 (2002), to perform structural relaxations
         under the constraint that the polarization is equal to a value specified by the
         input variable [[anaddb:targetpol]].
         The user starts from a given configuration of a crystal and performs
         a ground-state calculation of the Hellman-Feynman forces and stresses
         and the Berry phase polarization as
         well as a linear response calculation of the whole matrix of
         second-order energy derivatives with respect to atomic displacement,
         strains and electric field.
         <br>
         In case <b>polflag</b>=1, ANADDB solves the linear system of equations
         (13)
         of the Na Sai paper, and computes new atomic positions (if [[anaddb:relaxat]]=1) and
         lattice constant (if [[anaddb:relaxstr]]=1).
         Then, the user uses these parameters to perform a new ground-state
         and linear-response calculation. This must be repeated until convergence is
         reached. The user can also fix some atomic positions, or strains, thanks to the input variables
         [[anaddb:natfix]], [[anaddb:nstrfix]],[[anaddb:iatfix]],[[anaddb:istrfix]].
         <br>
         In case both [[anaddb:relaxat]]
         and [[anaddb:relaxstr]] are 0, while
         <b>polflag</b>=1, ANADDB only computes the polarization in cartesian coordinates.
         </p>
         <p><As described in the Na Sai's paper, it is important to use the
         finite difference expression of the ddk ([[berryopt]]=2 or -2)
         in the linear response calculation of the effective charges and the piezoelectric tensor.
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: prtdos
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: PRinT the phonon Density Of States
    requires: null
    text: |-
         <p>The <b>prtdos</b> variable is used to calculate
         the phonon density of states, PHDOS, by Fourier interpolating the interatomic force
         constants on the (dense) q-mesh defined by [[anaddb:ng2qpt]].
         Note that the variable <a href="#ifcflag">ifcflag</a> must be set to 1
         since the interatomic force constants are supposed to be known.
         <p>
         The available options are:
         <ul>
          <li>0 =&gt; no output of PHDOS (default);</li>
          <li>1 =&gt; calculate PHDOS using the gaussian method and the broadening defined
          by [[anaddb:dossmear]]. </li>
          <!--<li>2 =&gt; use tetrahedron method. </li>-->
          </ul>
  
         The step of the frequency grid employed to calculate the DOS
         can be defined through the input variable [[anaddb:dosdeltae]].
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: prtbltztrp
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: PRinT input files for BoLTZTRaP code.
    requires: null
    text: |-
       <ul>
         <li>0 =&gt; do not write the BoltzTraP input files;</li>
         <li>1 =&gt; write out the input files for BoLTZTRaP code.</li>
       </ul>
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: prtfsurf
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: PRinT the Fermi SURFace
    requires: null
    text: |-
          <p>Only for electron-phonon calculations. The available options are:

          <ul>
            <li>0 =&gt; do not write the Fermi Surface;</li>
            <li>1 =&gt; write out the Fermi Surface in the BXSF format used by 
            [[www.xcrysden.org|XCrySDen]].</li>

          </ul>
          <p>Further comments: 
          <p> a) Only the eigenvalues for k-points inside the
          Irreducible Brillouin zone are required. As a consequence it is
          possible to use [[kptopt]]
          =1 during the GS calculation to reduce
          the computational effort.</font></p>
          
          <p> b) Only unshifted k-grids that are orthogonal in
          reduced space are supported by <a href="http://www.xcrysden.org">XCrySDen</a>.
          This implies that [[shiftk]]
          must be set to (0,0,0) during the GS calculation
          with [[nshiftk]]=1. Furthermore if [[kptrlatt]]
          is used to generate the k-grid, all the off-diagonal elements of this
          array must be zero.</p>
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: prt_ifc
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: PRinT the Interatomic Force Constants
    requires: null
    text: |-
         <p>Flag to print out the Interatomic Force Constants in real space to a file. The available
         options are:
         <ul>
          <li>0 =&gt; do nothing (IFC are printed to the log file);</li>
          <li>1 =&gt; write out the IFC in file ifcinfo.out (the name is fixed) to be used by AI2PS from John Rehr's group</li>
         </ul>
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: prtmbm
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: PRinT Mode-By-Mode decomposition of the electrooptic tensor
    requires: null
    text: |-
         <ul>
         <li>0 =&gt; do not write the mode-by-mode decomposition of the
         electrooptic tensor;</li>
         <li>1 =&gt; write out the contribution of the individual zone-center
         phonon modes to the electrooptic tensor.</li>
         </ul>
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: prtnest
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: PRinT the NESTing function
    requires: null
    text: |-
          <p>Only for electron-phonon calculations.
          This input variable is used to calculate the nesting function defined as:
          \chi_{nm}(q) = \sum_k \delta(\epsilon_{k,n}-epsilon_F) \delta(\epsilon_{k+q,m}-\epsilon_F).
          The nesting factor is calculated for every point of the k-grid
          employed during the previous GS calculation.
          The values are subsequently interpolated along the trajectory in q space
          defined by [[anaddb:qpath]], and written in the _NEST
          file using the X-Y format (<b>prtnest</b>=1).
          It is also possible to analyze the behavior of the function
          in the reciprocal unit cell saving the values in the NEST_XSF file that can be read
          using <a href="http://www.xcrysden.org">XCrySDen</a> (<b>prtnest</b>=2).
          Note that in the present implementation what is really printed to file is
          the "total nesting" defined as \sum_{nm} \chi_{nm}(q).
          Limitations: the k-grid defined by
          [[kptrlatt]]
          must be orthogonal in reciprocal space,
          moreover off-diagonal elements are not allowed, i.e
          kptrlatt 4 0 0  0 4 0  0 0 4 is fine while
          kprtlatt = 1 0 0 0 1 1 0 -1 1 will not work.
  
          <p>	
          <ul>
            <li>0 =&gt; do not write the nesting function;</li>
            <li>1 =&gt; write only the nesting function along the q-path in the X-Y format;</li>
            <li>2 =&gt; write out the nesting function both in the X-Y and in the XSF format.</li>
          </ul>
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: prtvol
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: PRinT VOLume
    requires: null
    text: |-
         <p>Control the volume of printed output.
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: prtphbands
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 1
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: PRinT PHonon BANDS
    requires: null
    text: |-
         <p>Only if [[anaddb:ifcflag]]=1. 
  
         This option specifies the file format for the phonon band structure.
         Possible values:
  
         <ul>
         <!--
         <li>0 Disable the output of the phonon frequencies.</li>
         -->
  
         <li>1 Write frequencies in xmgrace format.  A file with extension `PHBANDS.agr` is produced.
         Use `xmgrace file_PHBANDS.agr` to visualize the data</li>
  
         <li>2 Write frequencies in gnuplot format. 
         The code produces a `PHBANDS.dat` file with the eigenvalues and a `PHBANDS.gnuplot` script.
         Use `gnuplot file_PHBANDS.gnuplot` to visualize the phonon band structure.</li>
         </ul>
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: prtsrlr
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: PRinT the Short-Range/Long-Range decomposition of phonon FREQuencies
    requires: null
    text: |-
         <p>Only if [[anaddb:ifcflag]]=1. 
         The available options are:
         <ul>
           <li>0 =&gt; do not write the SR/LR decomposition of phonon frequencies;</li>
           <li>1 =&gt; write out the SR/LR decomposition of the square of phonon frequencies at each q-point specified 
           in [[anaddb:qph1l]].</li>
         </ul>
         <p> For details see <I>Europhys. Lett., 33 (9), pp. 713-718 (1996)</I>.
         See also [[anaddb:ifcflag]], [[anaddb:ifcflag]] and [[anaddb:dipdip]].
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: qgrid_type
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Q wavevectors defining a PATH
    requires: null
    text: |-
        <p>If <b>qgrid_type</b> is set to 1, the electron-phonon part of anaddb will use
        the [[anaddb:ep_nqpt]] and [[anaddbep_qptlist]] variables to determine
        which q-points to calculate the electron-phonon coupling for. This is an alternative
        to a regular grid as in the rest of anaddb (using [[anaddb:ngqpt]]).
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: qpath
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: <b>qpath</b>(:,:)=0.0
    dimensions: array
    excludes: null
    executables: anaddb
    mnemonics: Q wavevectors defining a PATH
    requires: null
    text: |-
          <p>It is used to generate the path along which the phonon band structure and
          phonon linewidths are interpolated.
          There are [[anaddb:nqpath]]-1 segments to be
          defined, each of which starts from the end point of the previous one.
          The number of divisions in each segment is automatically calculated
          inside the code to respect the proportion between the segments.
          The same circuit is used for the output of the nesting function if
          [[anaddb:prtnest]]=1.
    topics: 
    varset: varanaddb
    vartype: real array <b>qpath</b>(3,[[anaddb:nqpath]]) 
- !variable
    anavarname: qph1l
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: array
    excludes: null
    executables: anaddb
    mnemonics: Q for PHonon List 1
    requires: null
    text: |-
        <p>List of [[anaddb:nph1l]]
        wavevectors, at which the phonon frequencies will be interpolated.
        Defined by 4 numbers:
        the wavevector is made by the three first numbers
        divided by the fourth one (a normalisation factor).
        The coordinates are defined with respect to the unit vectors
        that spans the Brillouin zone. Note that this set of axes
        can be non-orthogonal and not normed.
        The normalisation factor makes easier the input of wavevector
        such as (1/3,1/3,1/3), represented by 1.0 1.0 1.0 3.0 .
        <br>
        The internal representation of this array is as follows:
        for each wavevector, the three first numbers are stored
        in the array qph1l(3,nph1l), while the fourth is stored
        in the array qnrml1(nph1l).
    topics: 
    varset: varanaddb
    vartype: real array <b>qph1l</b>(4,[[anaddb:nph1l]]) 
- !variable
    anavarname: qph2l
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: all 0
    dimensions: array
    excludes: null
    executables: anaddb
    mnemonics: PHonon List 2
    requires: null
    text: |-
         <p>List of phonon wavevector <i>directions</i> along which the
         non-analytical correction to the Gamma-point phonon frequencies
         will be calculated (for insulators).
         Four numbers, as for [[anaddb:qph1l]], 
         but where the last one, that correspond to the normalisation factor, is 0.0
         For the anaddb code, this has the meaning that the three previous
         values define a direction. The direction is in CARTESIAN
         COORDINATES, unlike the non-Gamma wavevectors defined in the first list of vectors...
         <p>
         Note that if the three first numbers are zero, then
         the code will do a calculation at Gamma without non-analyticities.
         <p>
         Also note that the code automatically set the imaginary
         part of the dynamical matrix to zero. This is useful to compute
         the phonon frequencies when half of the k-points has been
         used, by the virtue of the time-reversal symmetry (which
         may induce parasitic imaginary parts...).
         <br>
         The internal representation of this array is as follows:
         for each wavevector, the three first numbers are stored
         in the array qph2l(3,nph2l), while the fourth is stored
         in the array qnrml2(nph2l).
    topics: 
    varset: varanaddb
    vartype: real array qph2l(4,[[anaddb:nph2l]]) 
- !variable
    anavarname: qrefine
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: array
    excludes: null
    executables: anaddb
    mnemonics: Q-point REFINEment order (experimental)
    requires: null
    text: |-
         <p>If <b>qrefine</b> is superior to 1, attempts to initialize a first set of dynamical matrices
         from the DDB file, with a q-point grid which is [[anaddb:ngqpt]]
         divided by <b>qrefine</b> (e.g. ngqpt 4 4 2 qrefine 2 2 1 starts with a 2x2x2 grid).
         The dynamical matrices are interpolated onto the full [[anaddb:ngqpt]]
         grid and any additional information found in the DDB file is imposed, before proceeding
         to normal band structure and other interpolations. Should implement Gaal-Nagy's algorithm in
         PRB <b>73</b> 014117.
    topics: 
    varset: varanaddb
    vartype: integer array <b>qrefine</b>(3)
- !variable
    anavarname: q1shft
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: array
    excludes: null
    executables: anaddb
    mnemonics: Q shifts for the grid number 1
    requires: null
    text: |-
         <p>This vector gives the shifts needed to define the coarse q-point grid.
         <p>
            a) Case nqshft=1
            In general, 0.5 0.5 0.5 with the ngqpt's even will give
              very economical grids. On the other hand, is it
              sometimes better for phonons to have the Gamma point
              in the grid. In that case, 0.0 0.0 0.0 should be OK.
            For the hexagonal lattice, the above mentioned
              quantities become 0.0 0.0 0.5 and 0.0 0.0 0.0 .
         <p>
            b) Case nqshft=2
            The two q1shft vectors must form a BCC lattice.
            For example, use 0.0 0.0 0.0 and 0.5 0.5 0.5
         <p>
            c) Case nqshft=4
            The four q1shft vectors must form a FCC lattice.
            For example, use 0.0 0.0 0.0 , 0.0 0.5 0.5 ,
                             0.5 0.0 0.5 , 0.5 0.5 0.0
            or   0.5 0.5 0.5  , 0.0 0.0 0.5 ,
                 0.0 0.5 0.0  , 0.5 0.0 0.0  (the latter is referred to
                                              as shifted)
         <p>
            Further comments: by using this technique, it is possible
            to increase smoothly the number of q-points, at least
            less abruptly than relying on series of grids like
            (for the full cubic symmetry): <br>
            1x1x1 => (0 0 0) <br>
            2x2x2 (shifted) => (.25 .25 .25) <br>
            2x2x2 => 1x1x1 + (.5 0 0) (.5 .5 0) (.5 .5 0) <br>
            4x4x4 => 2x2x2 + (.25 0 0) (.25 .25 0) (.25 .5 0) 
                            (.25 .25 .25) (.25 .25 .5) (.25 .5 .5) <br>
             ... <br> <br>
            with respectively 1, 1, 4 and 10 q-points, corresponding
            to a number of points in the full BZ of 1, 8, 8 and 64.
            Indeed, the following grids are made available: <br>
            1x1x1 with nqshft=2  => (0 0 0) (.5 .5 .5) <br>
            1x1x1 with nqshft=4  => (0 0 0) (.5 .5 0) <br>
            1x1x1 with nqshft=4 (shifted) => (.5 0 0) (.5 .5 .5) <br>
            2x2x2 with nqshft=2  => 2x2x2 + (.25 .25 .25) <br>
            2x2x2 with nqshft=4  => 2x2x2 + (.25 .25 0) (.25 .25 .5) <br>
            2x2x2 with nqshft=4 (shifted) => (.25 0 0) (.25 .25 .25)
                                             (.5 .5 .25) (.25 .5 0) <br>
             ... <br> <br>
            with respectively 2, 2, 2, 5, 6 and 4 q-points, corresponding
            to a number of points in the full BZ of 2, 4, 4, 16, 32 and 32.
         <p>
            For a FCC lattice, it is possible to sample only the Gamma point
            by using a 1x1x1 BCC sampling (nqshft=2).
         <p>
    topics: 
    varset: varanaddb
    vartype: real array <b>q1shft</b>(3,[[anaddb:nqshft]]) 
- !variable
    anavarname: q2shft
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: all 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Q points SHiFTs for the grids 2
    requires: null
    text: |-
         <p>Similar to [[anaddb:q1shft]],
         but for the series of fine grids.
         <p>Note that [[anaddb:nqshft]]
         for this series of grids corresponds to 1.
    topics: 
    varset: varanaddb
    vartype: real array q2shft(3) 
- !variable
    anavarname: ramansr
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: RAMAN Sum-Rule
    requires: null
    text: |-
         <p>Govern the imposition of the sum-rule on the Raman tensors.
         <br>
         As in the case of the Born effective charges, the first-order derivatives
         of the linear dielectric susceptibility with respect to an atomic displacement
         must vanish when they are summed over all atoms. This sum rule is broken
         in most calculations. By putting <b>ramansr</b> equal to 1 or 2, this sum
         rule is imposed by giving each atom a part of the discrepancy.
         <ul>
           <li>0 =&gt; no sum rule is imposed;</li>
           <li>1 =&gt; impose the sum rule on the Raman tensors, giving each
         atom an equal part of the discrepancy;</li>
           <li>2 =&gt; impose the sum rule on the Raman tensors, giving each
         atom a part of the discrepancy proportional to the magnitude of its
         contribution to the Raman tensor.</li>
         </ul>
         For the time being, <b>ramansr</b>=1 is the preferred choice.
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: relaxat
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: RELAXation of AToms
    requires: null
    text: |-
         <p>If <b>relaxat</b>=1, relax atomic positions during a
         structural relaxation at constrained polarization.
         See [[anaddb:polflag]].
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: relaxstr
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: RELAXation of STRain
    requires: null
    text: |-
         <p>If <b>relaxat</b>=1, relax lattice constants
         (lengths/angles) during a structural relaxation
          at constrained polarization. See [[anaddb:polflag]].
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: rfmeth
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 1
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Response-Function METHod
    requires: null
    text: |-
         <p>Select a particular set of Data Blocks in the DDB.
         (PRESENTLY, ONLY OPTION 1 IS AVAILABLE)
         <br>
         <ul>
           <li> 1 =&gt; Blocks obtained by a non-stationary formulation.</li>
           <li> 2 =&gt; Blocks obtained by a stationary formulation.</li>
         </ul>
         For more detailed explanations, see [[help_abinit]]
         If the information in the DDB is available, always use
         the option 2. If not, you can try option 1, which is less accurate.
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: rifcsph
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: zero
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Radius of the Interatomic Force Constant SPHere
    requires: null
    text: |-
         <p>Cut-off radius for the sphere for
         interatomic force constant, see also the alternative <a href="#nsphere">nsphere</a>.
         If <b>rifcsph</b>= 0: maximum extent allowed by the grid .
 
         <p>This number defines the atoms for which the
         short range part of the interatomic force constants, after
         imposition of the acoustic sum rule, will not be put to zero.
    topics: 
    varset: varanaddb
    vartype: real 
- !variable
    anavarname: selectz
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: SeLECT Z
    requires: null
    text: |-
         <p>Select some parts of the effective charge tensor.
         (This is done after the application or non-application of the ASR for
         effective charges). The transformed effective charges are then used for
         all the subsequent calculations. <br>
         <ul>
          <li> 0 => The effective charge tensor is left as it is.</li>
          <li> 1 => For each atom, the effective charge tensor is made
                 isotropic, by calculating the trace of the matrix,
                 dividing it by 3, and using this number in a
                 diagonal effective charge tensor. </li>
          <li> 2 => For each atom, the effective charge tensor is made
                 symmetric, by simply averaging on symmetrical elements.<li>
         </ul>
         <p>
         Note: this is for analysis the effect of anisotropy
         in the effective charge. The result with non-zero <b>selectz</b>
         are unphysical.</p>
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: symdynmat
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 1 (was 0 before v5.3)
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: SYMmetrize the DYNamical MATrix
    requires: null
    text: |-
         <p>If <b>symdynmat</b> is equal to 1, the dynamical matrix
         is symmetrized before the diagonalization.
         <br>
         This is especially useful when the set of primitive vectors of the unit cell
         and their opposite do not reflect the symmetries of the Bravais lattice
         (typical case: body-centered tetragonal lattices ; FCC and BCC lattices
         might be treated with the proper setting of the
         [[anaddb:brav]] variable), and the interpolation
         procedure based on interatomic force constant is used: there are some
         slight symmetry breaking effects. The latter can be bypassed by this
         additional symmetrization.
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: symgkq
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 1
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: SYMmetrize the GKk matrix elements for each Q
    requires: null
    text: |-
         <p>If <b>symgkq</b> is equal to 1, the electron-phonon matrix elements are symmetrized
         over the small group of the q-point they correspond to. This should always be used,
         except for debugging or test purposes.
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: targetpol
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0.0
    dimensions: array
    excludes: null
    executables: anaddb
    mnemonics: TARGET POLarization
    requires: null
    text: |-
         <p>Target value of the polarization in cartesian
         coordinates and in C/m^2.
         See [[anaddb:polflag]].
    topics: 
    varset: varanaddb
    vartype: real targetpol(1:3) 
- !variabletelphint
    anavarname: 
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 1
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Technique for ELectron-PHonon INTegration
    requires: null
    text: |-
         <p>Flag controlling the Fermi surface integration
         technique used for electron-phonon quantities.
         <ul>
           <li>0 = tetrahedron method (no adjustable parameter)</li>
           <li>1 = Gaussian smearing (see [[anaddb:elphsmear]])</li>
           <li>2 = uniformly weighted band window between [[anaddb:ep_b_min]] and [[anaddb:ep_b_max]], for all k-points</li>
         </ul>
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: temperinc
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 100.0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: TEMPERature INCrease
    requires: null
    text: |-
         <p>Increment of the temperature in Kelvin, for thermodynamical and el-phon
         transport properties. See the associated
         [[anaddb:tempermin]] and [[anaddb:ntemper]] variables.
         The default temperature grid goes from 100K to 1000K by step of 100K. For the largest temperatures, for most solids, anharmonic effects not accounted in the harmonic approximation implemented in anaddb will be important. For weakly bounded systems (e.g. Van der Waals solids), such anharmonic effects might be important already at room temperature.

    topics: 
    varset: varanaddb
    vartype: real 
- !variable
    anavarname: tempermin
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 100.0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: TEMPERature MINimum
    requires: null
    text: |-
         <p>Lowest temperature (Kelvin) at which the thermodynamical quantities
         have to be evaluated. Cannot be zero when <a href="#thmflag">thmflag</a>
         <p>The highest temperature is defined using
         [[anaddb:temperinc]] and [[anaddb:ntemper]].
         The default temperature grid goes from 100K to 1000K by step of 100K. For the largest temperatures, for most solids, anharmonic effects not accounted in the harmonic approximation implemented in anaddb will be important. For weakly bounded systems (e.g. Van der Waals solids), 
         such anharmonic effects might be important already at room temperature.
    topics: 
    varset: varanaddb
    vartype: real 
- !variable
    anavarname: thmflag
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: THerMal FLAG
    requires: null
    text: |-
         <p>Flag controlling the calculation of thermal quantities.
  
         <ul>
         <li>When <b>thmflag</b> == 1, the code will compute, using the histogram method:
         <ul>
         <li> the normalized phonon DOS </li>
         <li> the phonon internal energy, free energy,
                entropy, constant volume heat capacity
                as a function of the temperature </li>
         <li> the Debye-Waller factors (tensors) for
                each atom, as a function of the temperature</li>
         <li> the mean-square velocity tensor for each atom, as a function of temperature </li>
         <li> the "average frequency"
                as a function of the temperature
         </ul> </li>
         <li>When <b>thmflag</b> == 2, all the phonon frequencies for the
         q points in the second grid are printed. </li>
  
         <li>When <b>thmflag</b> == 3, 5 or 7, the thermal corrections to the electronic eigenvalues are calculated. 
         If <b>thmflag</b>==3, the list of phonon wavevector from the first list is used (with equal weight for all wavevectors in this list), 
         while if <b>thmflag</b>==5 or 7, the first grid of wavevectors is used, 
         possibly folded to the irreducible Brillouin Zone if symmetry operations are present,
         or if they are recomputed (this happens for <b>thmflag</b>==7).</li>
         <li>When <b>thmflag</b> == 4 or 6, the temperature broadening (electron lifetime) of the electronic eigenvalues is calculated. 
         If <b>thmflag</b>==4, the list of phonon wavevector from the first list is used (with equal weight for all wavevectors in this list), 
         while if <b>thmflag</b>==6, the first grid of wavevectors is used, possibly folded to the irreducible Brillouin Zone 
         if symmetry operations are present or if they are recomputed (this happens for <b>thmflag</b>==8).</li>
         </ul>
         WARNING: The use of symmetries for the temperature dependence of the eigenenergies is tricky ! It can only be valid
          for the  k points that respect the symmetries (i.e. the Gamma point), provided one also averages over the
         degenerate states.
         <br>
  
         <p>
         Input variables that may be needed if this flag is activated:
         [[anaddb:dostol]], [[anaddb:nchan]], [[anaddb:ntemper]], [[anaddb:temperinc]], [[anaddb:tempermin]],
         as well as the wavevector grid number 2 definition,  [[anaddb:ng2qpt]], [[anaddb:ngrids]], [[anaddb:q2shft]].
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: thmtol
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0.05
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: THerModynamic TOLerance
    requires: null
    text: |-
         <p>The relative tolerance on the thermodynamical functions
         This number will determine when the series of channel widths
         with which the DOS is calculated can be stopped, i.e.
         the mean of the relative change going from one grid
         to the next bigger is smaller than <b>thmtol</b>.
    topics: 
    varset: varanaddb
    vartype: real 
- !variable
    anavarname: use_k_fine
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: 0
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: USE K-grid FINEr than the coarse k-grid
    requires: null
    text: |-
         <p>When set, [[anaddb:kptrlatt_fine]] is suggested to be given. For the present version, both eigenvalues (densergridGKK, obtained from mrggkk with only the GS WFK file) and electronic velocities(GKK files from DDK calculation) are needed. Note that the coarse k-grid must be a subset of the fine k-grid.
 
    topics: 
    varset: varanaddb
    vartype: integer 
- !variable
    anavarname: vs_qrad_tolkms
    characteristics:null
    commentdefault: null
    commentdims: null
    defaultval: [0,0] (will not work)
    dimensions: scalar
    excludes: null
    executables: anaddb
    mnemonics: Speed of Sound: Q-radius, TOLerance KiloMeter/Second
    requires: null
    text: |-
          <p>This variable activates the calculation of the speed of sound 
          (requires [[anaddb:ifcflag]] = 1).
          The first entry of the array defines the radius of the small sphere around the Gamma point (Bohr-1).
          The second entry gives the absolute tolerance in kilometer/second.
          The speed of sound is evaluated be performing and a spherical average on the small sphere using
          Lebedev-Laikov grids (typical values for q-radius: 0.1 Bohr-1)
          The number of radial points is increased until the integration converges twice withing the tolerance
          specified by the user (typical values for tolkms: 0.05 km/s).
    topics: 
    varset: varanaddb
    vartype: real array(2) 