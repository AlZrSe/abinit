- !variable
    characteristics: null
    commentdefault: null
    commentdims: null
    defaultval: 0
    definition: GET the first-order density from _DEN file
    dimensions: scalar
    excludes: null
    requires: null
    section: varfil
    text: |-
        <p>
         Relevant only for non self consistent RF calculations (e.g. to get electron phonon matrix elements)
        or for non linear RF calculations (to get mixed higher order derivatives you need several perturbed
        densities and wave functions).
        Indicate the files from which first-order densities must be obtained,
        in multi-dataset mode (in single dataset mode, use [[ird1den]]).
         <br />
         NOTE : a negative value of a "get" variable indicates the number of datasets to go backwards;
        it is not the number to be subtracted from the current dataset to find the proper dataset.
        As an example :
         <pre>
          ndtset 3   jdtset 1 2 4  getXXX -1
         </pre>
         refers to dataset 2 when dataset 4 is initialized.
        </p>
    varname: get1den
    vartype: integer
- !variable
    characteristics: null
    commentdefault: null
    commentdims: null
    defaultval: 0
    definition: 'GET the first-order wavefunctions from _1WF file '
    dimensions: scalar
    excludes: null
    requires: null
    section: varfil
    text: |-
        <p>
         Eventually used when [[ndtset]]&gt;0
        (in the multi-dataset mode), to indicate
        starting wavefunctions, as an alternative to [[irdwfk]],
        [[irdwfq]], [[ird1wf]], [[irdddk]]. One should first read the
        explanations given for these latter variables.
         <br />
         The
         <b>
          getwfk
         </b>
         ,
         <b>
          getwfq
         </b>
         , [[get1wf]] and
         <b>
          getddk
         </b>
         variables are typically
        used to chain the calculations in the multi-dataset mode,
        since they describe from which dataset the OUTPUT
        wavefunctions are to be taken, as INPUT wavefunctions
        of the present dataset.
         <br />
         <br />
         We now focus on the
         <b>
          getwfk
         </b>
         input variable (the only
        one used in ground-state calculations), but
        the rules for
         <b>
          getwfq
         </b>
         and [[get1wf]] are similar, with _WFK
        replaced by _WFQ or _1WF.
         <br />
         If
         <b>
          getwfk
         </b>
         ==0, no use of previously computed output
        wavefunction file appended with _DSx_WFK is done.
         <br />
         If
         <b>
          getwfk
         </b>
         is positive, its value gives the index of the dataset
        for which the output wavefunction file appended with _WFK
        must be used.
         <br />
         If
         <b>
          getwfk
         </b>
         is -1, the output wf file with _WFK
        of the previous dataset must be taken,
        which is a frequently occurring case.
         <br />
         If
         <b>
          getwfk
         </b>
         is a negative number, it indicates the number
        of datasets to go backward to find the needed wavefunction file.
        In this case, if one refers to a non existent data set (prior
        to the first), the wavefunctions are not initialised from
        a disk file, so that it is as if
         <b>
          getwfk
         </b>
         =0 for that
        initialisation.
        Thanks to this rule, the use of
         <b>
          getwfk
         </b>
         -1 is rather
        straightforward : except for the first wavefunctions, that
        are not initialized by reading a disk file, the output
        wavefunction of one dataset is input of the next one.
         <br />
         In the case of a ddk calculation in a multi dataset
        run, in order to compute
        correctly the localisation tensor, it is mandatory to
        declare give getddk the value of the current dataset
        (i.e. getddk3 3 ) - this is a bit strange and
        should be changed in the future.
         <br />
         NOTE : a negative value of a "get" variable indicates the number of datasets to go backwards;
        it is not the number to be subtracted from the current dataset to find the proper dataset.
        As an example :
         <pre>
          ndtset 3   jdtset 1 2 4  getXXX -1
         </pre>
         refers to dataset 2 when dataset 4 is initialized.
        </p>
    varname: get1wf
    vartype: integer