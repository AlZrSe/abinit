<html>
<head>
<title>Multi-dataset calculations </title>
<body bgcolor="#ffffff">
<p>
<hr>
<h1>Multi-dataset calculations</h1>
<h3>This file gives the settings to put in the input file for ABINIT to link several calculations together.
<hr>

<h5>Copyright (C) 1998-2017 ABINIT group (FJ,XG)
<br> This file is distributed under the terms of the GNU General Public License, see
~abinit/COPYING or <a href="http://www.gnu.org/copyleft/gpl.txt">http://www.gnu.org/copyleft/gpl.txt</a>.
<br> For the initials of contributors, see ~abinit/doc/developers/contributors.txt .
</h5>

<script type="text/javascript" src="../users/list_internal_links.js"> </script>

<h3><b>Contents of ABINIT features: </b></h3>
<ul>
<li><a href="multi_dtset.html#multidataset">1.</a> The multi-dataset mode.
<li><a href="multi_dtset.html#series">2.</a> Defining a series.
<li><a href="multi_dtset.html#loop">3.</a> Defining a double loop dataset.
<li><a href="multi_dtset.html#4">4.</a> File names in the multi-dataset mode.
</ul>

 <p><b><a name="multidataset"></a>1. The multi-dataset mode.</b>
  <p>Until now, we have assumed that the user wants to make computations corresponding
    to one set of data : for example, determination of the total energy for some
    geometry, with some set of plane waves and some set of k-points. </p>
  <p>It is often needed to redo the calculations for different values of some
    parameter, letting all the other things equal. As typical examples, we have
    convergence studies needed to determine which cut-off energy gives the needed
    accuracy. In other cases, one makes chains of calculations in order to compute
    the band structure : first a self-consistent calculation of the density and
    potential, then the eigenenergy computation along different lines. </p>
  <p>For that purpose, the <b>multi-dataset mode</b> has been implemented. </p>
  <p>It allows the code to treat, in one run, different sets of data, and to chain
    them. The number of datasets to be treated is specified by the variable
    <a href="../input_variables/html_automatically_generated/varbas.html#ndtset" target="kwimg">ndtset</a>,
    while the indices of the datasets (by default 1, 2, 3,
    and so on) can be eventually provided by the array <a href="../input_variables/html_automatically_generated/varbas.html#jdtset" target="kwimg">jdtset</a>.
  </p>
  <p>For each dataset to be treated, characterized by some index, each input variable
    will determined by the following <b>rules</b> (actually, it is easier to understand
    when one looks at examples, see below) : </p>
  <ul>
    <li> (<a name="ref8_1"></a>1) ABINIT looks whether the variable name (e.g.
      <a href="../input_variables/html_automatically_generated/varbas.html#ecut" target="kwimg">ecut</a> ), appended with the
      index of the dataset (e.g. <a href="../input_variables/html_automatically_generated/varbas.html#jdtset" target="kwimg">jdtset</a>=2),
      exists (e.g. "ecut2" ) . It
      will take the data that follows this keyword, if it exists.</li>
    <li> (<a name="ref8_2"></a>2) If this modified variable name does not exist,
      it will look whether a metacharacter, a series or a double-loop data set
      has been defined, see sections
      <a href=#series>3.4</a> or <a href=#loop>3.5</a>.</li>
    <li> (<a name="ref8_3"></a>3) If the variable name appended with the index
      of the dataset does not exist, and if there is no series nor double-loop
      dataset for this keyword, it looks for an occurrence of the variable name
      without any index appended, and take the corresponding data. (This corresponds
      to the single dataset mode)</li>
    <li> (<a name="ref8_4"></a>4) If such occurrences do not exist, it takes the
      default value. (Also, similar to the single dataset mode)</li>
  </ul>
  <pre>
     ---------------

     1st example.

     ndtset   2
      acell   8 8 8
       ecut1  10
       ecut2  15
</pre>
  means that there are 2 datasets : a first in which
  <pre>     acell 8 8 8  ecut 10 </pre>
  has to be used, and a second in which
  <pre>     acell 8 8 8  ecut 15</pre>
  has to be used.
  <pre>
     ------------------

     2nd example

     ndtset 2     jdtset 4 5

     acell   8 8 8
     acell5 10 10 10
     ecut1  10
     ecut2  15
     ecut3  20
     ecut4  25
     ecut5  30
</pre>
  <p>this means that there are still two datasets, but now characterized by the
    indices 4 and 5, so that the first run will use the generic "acell",
    and "ecut4" :
  <pre>     acell 8 8 8 ecut 25
</pre>
  and the second run will use "acell5"
  and "ecut5" :
  <pre>     acell 10 10 10 ecut 30 </pre>
  <p>Note that ecut1, ecut2 and ecut3 are not used. </p>
  <h4>&nbsp;</h4>

<h4><a name="series"></a>2. Defining a series. </h4>

Rule (2) is split in three parts : (2a), (2b) and (2c).
<br> Series relate with (2b):
<p>
(<a name="ref8_2b"></a>2b) If the variable name appended with the index of the
dataset does not exist, the code looks whether a series has been defined for this
keyword.
<p>There are two kinds of series :
<ul>
    <li>arithmetic series (constant <i>increment</i> between terms of the series)
    <li> geometric series (constant <i>ratio</i> between terms of the series)
  </ul>
  <p>The first term of the series is defined by the keyword appended with a colon
    (e.g. <b>ecut:</b> ), while the increment of an arithmetic series is defined
    by the keyword appended with a plus (e.g. <b>ecut+</b> ), and the factor of
    a geometric series is defined by the keyword appended with a times (e.g. <b>ecut*</b>
    ). </p>
  <p>If the index of the dataset is 1, the first term of the series is used, while
    for index N , the appropriate input data is obtained by considering the Nth
    term of the series. </p>
  <pre>
  ------------------

  3rd example

    ndtset 6
    ecut1 10
    ecut2 15
    ecut3 20
    ecut4 25
    ecut5 30
    ecut6 35
</pre>
  is equivalent to
  <pre>    ndtset 6 ecut: 10 ecut+ 5
</pre>
  <p>In both cases, there are six datasets, with increasing values of <a href="../input_variables/html_automatically_generated/varbas.html#ecut" target="kwimg">ecut</a>.
  </p>
  <h4>&nbsp; </h4>

<h4><a name="loop"></a>3. Defining a double loop dataset </h4>
  <p>To define a double loop dataset, one has first to define the upper limit
    of two loop counters, thanks to the variable <a href="../input_variables/html_automatically_generated/varbas.html#udtset" target="kwimg">udtset</a>.
    The inner loop will execute from 1 to <a href="../input_variables/html_automatically_generated/varbas.html#udtset" target="kwimg">udtset</a>(2),
    and the outer loop will execute from 1 to <a href="../input_variables/html_automatically_generated/varbas.html#udtset" target="kwimg">udtset</a>(1).
    Note that the largest value for <a href="../input_variables/html_automatically_generated/varbas.html#udtset" target="kwimg">udtset</a>(1) is presently 999,
    while it is 9 for <a href="../input_variables/html_automatically_generated/varbas.html#udtset" target="kwimg">udtset</a>(2) (so, only the last digit for the inner loop). </p>
  <p>The value of <a href="../input_variables/html_automatically_generated/varbas.html#ndtset" target="kwimg">ndtset</a> must
    be coherent with <a href="../input_variables/html_automatically_generated/varbas.html#udtset" target="kwimg">udtset</a> (it
    must equal the product <code>udtset(1)*udtset(2)</code> ). </p>
  <p>A dataset index is created by the concatenation of the outer loop index and
    the inner loop index. <br>
    For example, if <a href="../input_variables/html_automatically_generated/varbas.html#udtset" target="kwimg">udtset</a>(1)
    is 2 and <a href="../input_variables/html_automatically_generated/varbas.html#udtset" target="kwimg">udtset</a>(2) is 4,
    the index will assume the following values : <code>11, 12, 13, 14, 21, 22,
    23, and 24</code>.
  <p> Independently of the use of <a href="../input_variables/html_automatically_generated/varbas.html#udtset" target="kwimg">udtset</a>,
    rules (2a) and (2c) will be used to define the value of an input variable: </p>
  <p><a name="multi_dtset.html#ref8_2a"></a>(2a) The question mark "<b>?</b>" can be used as a
    metacharacter, replacing any digit from 1 to 9, to define an index of a dataset.
    <br>
    For example, <b>ecut?</b>1 means that the input value that follows it can
    be used for <a href="../input_variables/html_automatically_generated/varbas.html#ecut" target="kwimg">ecut</a> for the datasets
    <code>01, 11, 21, 31, 41, 51, 61, 71, 81, and 91</code>. </p>
  <p><a name="multi_dtset.html#ref8_2c"></a>(2c) If the variable name appended with the index of
    the dataset does not exist, the code looks whether a double-loop series has
    been defined for this keyword. Series can be defined for the inner loop index
    or the outer loop index. Two signs will be appended to the variable name (instead
    of one in the simple series case). One of these signs must be a question mark
    "<b>?</b>", again used as a metacharacter able to assume the values 1 to 9.<br>
    If it is found in the first of the two positions, it means that the series
    does not care about the outer loop index (so the values generated are equal
    for all outer loop index values). If it is found in the second of the two
    positions, the series does not care about the inner loop index. The other
    sign can be a colon, a plus or a times, as in the case of the series defined
    in <a href="multi_dtset.html#ref8_2a">(2a)</a>, with the same meaning. </p>
  <p>Rule (<a href="multi_dtset.html#ref8_1">1</a>) has precedence over them,
    they have precedence over rules (<a href="multi_dtset.html#ref8_3">3</a>) or
    (<a href="multi_dtset.html#ref8_4">4</a>), rule (<a href="multi_dtset.html#ref8_2a">2a</a>)
    has precedence over rules <a href="multi_dtset.html#ref8_2b">(2b)</a> or <a href="multi_dtset.html#ref8_2c">(2c)</a>
    and the two latter cannot be used simultaneously for the same variable. </p>


  <pre>
     ------------------

     4th example
     ndtset 6    udtset 2 3
     acell1?  10 10 10
     acell2?  15 15 15
     ecut?: 5    ecut?+ 1
</pre>
  is equivalent to
  <pre>
     ndtset 6     jdtset 11 12 13  21 22 23
     acell11  10 10 10     ecut11 5
     acell12  10 10 10     ecut12 6
     acell13  10 10 10     ecut13 7
     acell21  15 15 15     ecut21 5
     acell22  15 15 15     ecut22 6
     acell23  15 15 15     ecut23 7
</pre>
  <p><i>More examples can be found in the directory ~abinit/tests/v1, cases 59 and later.</i>
  </p>

  <h4>&nbsp; </h4>

<h4><a name="4"></a>4. File names in the multi-dataset mode.</h4>

  <p>The root names for input and output files (potential, density, wavefunctions
    and so on) will receive an appendix : '<b>_DS</b>' followed by the index of
    the dataset. See <a href="../users/abinit_help.html#4">section 4</a>. </p>
  <p><a name="get">The '<b>get</b>' variables</a> can be used to chain the calculations. </p>
  <p> For a ground-state calculation useful variables are:
    <a href="../input_variables/html_automatically_generated/varfil.html#getocc" target="kwimg">getocc</a>,
    <a href="../input_variables/html_automatically_generated/varfil.html#getwfk" target="kwimg">getwfk</a>,
    <a href="../input_variables/html_automatically_generated/vardev.html#getwfkfine" target="kwimg">getwfkfine</a>,
    <a href="../input_variables/html_automatically_generated/varfil.html#getwfq" target="kwimg">getwfq</a>, <a href="../input_variables/html_automatically_generated/varfil.html#getddk" target="kwimg">getddk</a>,
    <a href="../input_variables/html_automatically_generated/varfil.html#get1wf" target="kwimg">get1wf</a>, <a href="../input_variables/html_automatically_generated/varfil.html#getden" target="kwimg">getden</a>,
    <a href="../input_variables/html_automatically_generated/varrlx.html#getcell" target="kwimg">getcell</a>, <a href="../input_variables/html_automatically_generated/varrlx.html#getxred" target="kwimg">getxred</a>
    <a href="../input_variables/html_automatically_generated/varrlx.html#getvel" target="kwimg">getvel</a>
    and <a href="../input_variables/html_automatically_generated/varrlx.html#getxcart" target="kwimg">getxcart</a>
.</p>
  <p>
  <ul>
    <li><a href="../input_variables/html_automatically_generated/varfil.html#getwfk" target="kwimg">getwfk</a> allows to take
      the output wavefunctions of a previous dataset and use them as input wavefunctions
    <li> <a href="../input_variables/html_automatically_generated/varfil.html#getwfq" target="kwimg">getwfq</a>, <a href="../input_variables/html_automatically_generated/varfil.html#getddk" target="kwimg">getddk</a>
      and <a href="../input_variables/html_automatically_generated/varfil.html#get1wf" target="kwimg">get1wf</a> do similar things
      for response function calculations
    <li><a href="../input_variables/html_automatically_generated/varfil.html#getden" target="kwimg">getden</a> does the same
      for the density ; <a href="../input_variables/html_automatically_generated/varrlx.html#getcell" target="kwimg">getcell</a>
      does the same for <a href="../input_variables/html_automatically_generated/varbas.html#acell" target="kwimg">acell</a>
      and <a href="../input_variables/html_automatically_generated/varbas.html#rprim" target="kwimg">rprim</a>
    <li><a href="../input_variables/html_automatically_generated/varrlx.html#getxred" target="kwimg">getxred</a> and <a href="../input_variables/html_automatically_generated/varrlx.html#getxcart" target="kwimg">getxcart</a>
      do the same for the atomic positions, either in reduced coordinates, or
      in cartesian coordinates.
  </ul>
<br/> For response calculations, a useful variable is: 
<a href="../input_variables/html_automatically_generated/vardev.html#getgam_eig2nkq" target="kwimg">getgam_eig2nkq</a>
<br/> For Bethe-Salpeter calculations, useful variables are: 
<a href="../input_variables/html_automatically_generated/varfil.html#getbscoup" target="kwimg">getbscoup</a>
<a href="../input_variables/html_automatically_generated/varfil.html#getbseig" target="kwimg">getbseig</a>
<a href="../input_variables/html_automatically_generated/varfil.html#getbsreso" target="kwimg">getbsreso</a>
<a href="../input_variables/html_automatically_generated/varfil.html#gethaydock" target="kwimg">gethaydock</a>
<br/> For GW calculations, useful variables are: 
<a href="../input_variables/html_automatically_generated/varfil.html#getqps" target="kwimg">getqps</a>
<a href="../input_variables/html_automatically_generated/varfil.html#getscr" target="kwimg">getscr</a>
<a href="../input_variables/html_automatically_generated/varfil.html#getsuscep" target="kwimg">getsuscep</a>
  <p>The different variables corresponding to each dataset are echoed using the
    same indexing convention as for the input step. For the last echo of the code
    variables, some output variables are also summarized, using the same conventions
    :
  <ul>
    <li><b>etotal</b> (total energy)
    <li><b>fcart</b> (cartesian forces)
    <li><b>strten</b> (the stress tensor).
  </ul>
  <p>

<script type="text/javascript" src="../users/list_internal_links.js"> </script>

</body>
</html>
