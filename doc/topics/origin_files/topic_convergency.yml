- !components 
    name      : convergency 
    keyword   : convergency 
    howto     : set parameters to tune the convergency of a calculation
    header    : default
    title     : <h1>Convergency settings</h1>
    subtitle  : default
    copyright : default
    links     : default
    introduction : |- 
         <p> The convergency of the energy must be tested towards the plane wave convergency and the k-point convergency according to tolerance criteria. The convergency of the Self-Consistent cycle is governed by the way densities or potentials are mixed between each iteration.
         <br/> The [[accuracy]] variable enables to tune the accuracy of a calculation by setting automatically up to seventeen variables.
         <br/>At the level of the generation of electronic eigenfunctions, an efficient band-by-band preconditioned conjugate-gradient algorithm is used, in its non-self-consistent version. An alternative algorithm "lobpcg"
         is also available.
         <br/>
         At the level of the self-consistency loop, an efficient
         potential-based preconditioned conjugate-gradient algorithm is used.
         Simple mixing is also available, as well as the Anderson algorithm.
         Preconditioning of this algorithm is achieved through a model
         dielectric function, or through an approximate dielectric matrix.
    tutorials  : |-
         <li><a href="../../tutorial/lesson_base2.html">The lesson 2</a> deals again with the H2
         molecule: convergence studies, LDA versus GGA </li>
         <li><a href="../../tutorial/lesson_base3.html">The lesson 3</a> deals with crystalline
         silicon (an insulator): the definition of a k-point grid, the smearing
         of the cut-off energy, the computation of a band structure, and again,
         convergence studies ...</li>
         <li><a href="../../tutorial/lesson_ldau.html">The lesson on DFT+U</a> shows
         how to perform a DFT+U calculation using ABINIT, and will lead to
         compute the projected DOS of NiO. Prerequisite : PAW1.</li>
    end : default 
